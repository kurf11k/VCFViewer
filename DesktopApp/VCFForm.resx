<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="settingsButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAA9dJREFUSEvF
        V9tOU0EU5cEv0MQH39TEqInv6rMfoP6Bn6Ag2KByQGrk0jZAK0UupUDanpaLQtsUKBixpRChVSgxYHmg
        IralLWoi+MQ463SmnN4QtOBKdnIys2etM/vsvWdOyWEhCK9PNJQZb8gNY2z66ECFrrU/e7k12OWRDM8Y
        Y9NHh+ZHotLjWtkNLf0gMI9reVdbJSrZ9NFBJ9gCHwMJSRSGZ121zc+miw9VRe91nWAd6mwYiXNRbhjT
        CeJQUUNef7/7vLbK+s7cOhmffxvOEJQb5kzP3XHqO6t50HWOLT8YWgRRra2xTagVpjsNZT2nNQrLbX3t
        YDTg/ZIhsjS/SebehCXDs3zO710nbcrBiLrSfAsc4AInuJlMJlT3jBfa615FF2YiZGzg/a/OBvtXo8YV
        X/6wJREuL2yRUaufGNUOYm2bIE6LjzjMPmJ9MSGNjdn8ZIX6SL50DdaCA1zg7KwfjkKDye2Bhsg77/mc
        8fbcsAtDo51Mjy+ReOQnSW7uZBjGvGNBySc7OtzArRWsXiaXgrrCcEWvHEqGgrkLINqtspPwaiJHMNvC
        oQQxqAuIU25oQIvJptAiWGppAiU/Bb+nnRFe7OIgotzWVuPEQF+Uhx0GTnA3F6r3lseWSpN2PMF3jm+K
        8MqJE7FthHWnp8kR62lyxnzupe1kLFPcOx4kY/2BlDDlAidtPA+ZTH7oqvvD/E27VY6MbwpRk9YVoxla
        U1feeQamq7bUYgxz3G+TrkHCcR5wMvr8eKownqJiG3BGmSB7ORkMO9UK4hPmngbEaWR25L6i3p0uNfq5
        NsDN3HPRWNp3WdRPRuGMGkXJyMkQXuySuaeBMYRd7usUfRIHuCz6yUhdec8l5p4LTJpbJ/5KuLc5S5iu
        nZtKlSfljDSWGi4y91zkhJo2BzkZEglhZe5p0PArp937h1p9t+Mkc88PeXIhQZAonIwnF8SxSxiezTpX
        TJ7Zh06u7HJCG0RH4oSSUQEkUl+LMwqTdppVTp7RxZxyAjeTyUS+BoImIDUQ2pHkxPvZWog2kMYRsrL4
        Lc3DGwg0mFwK+7VMtD90InSkfEJyk0TRMqcP0TJpA/cUOiS4ODqS/JtzwxjCi53mFaXGDolpJreHPx2L
        CPuoLSAlDTIWRyIMz90ap/RNeXjzHYvgznssAtkXARzmONRxQsnfHmWCGoXxkuHm96wTenmIaBSmmwe6
        CBQCrjG4zph07vj8VOGrD14CPjScM1TwLFv+78BFTivYBgtf9mwDqnLDVeZefBz79Zbjv13oEfKOuuGE
        3TQrGZ6P5RemOD9tJSW/AdCdiXPGxRskAAAAAElFTkSuQmCC
</value>
  </data>
</root>